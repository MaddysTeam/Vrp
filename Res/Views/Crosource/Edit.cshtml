@model CroResource
@{
    var id = this.ViewContext.RouteData.Values["id"];
    ViewBag.Title = Model == null ? "添加新作品" : "编辑作品";
}
<div class="col-md-10 content-wrapper">
	<div class="row">
		<div class="col-lg-4 ">
			<ul class="breadcrumb">
				<li>
					<i class="fa fa-home"></i>
					<a href="@Url.Action("Index", "Home")">首页</a>
				</li>
				<li><a href="@Url.Action("Index", "Crosource")">作品管理</a></li>
				<li class="active">@ViewBag.Title</li>
			</ul>
		</div>
	</div>

	<!-- main -->
	<div class="content">
		<div class="main-header">
			<h2>@ViewBag.Title</h2>
            <em>本页面编辑作品内容信息</em>
		</div>

		<div class="main-content">

			<!-- widget -->
				<div class="widget-content">

				<div class="uploadForms">
				</div>

				<div class="row">
					@using (Html.BeginForm("Edit", "Crosource", Model == null ? null : new { resid = Model.CrosourceId }, FormMethod.Post, new { id = "form", role = "form", @class = "form-horizontal" }))
					{
						@Html.HiddenFor(m => m.CrosourceId)

						<fieldset class="col-sm-11  fieldContainer">

							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request">*</span> 资源标题</label>
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.Title, new { @class = "form-control", maxlength = "255", placeholder = "资源标题" })
									@Html.ValidationMessageFor(m => m.Title)
								</div>
							</div>

							@*<div class="form-group">
									<label class="control-label col-sm-3"> <span class="request">*</span> 资源类型</label>

									<div class="col-sm-9">
									@Html.RadioButtonFor(m => m.RType,"1", new { @name = "rdolstState",@class="yuanchuang", @Checked = "checked" })原创资源

									@Html.RadioButtonFor(m => m.RType,"2",new { @name = "rdolstState", @class="tuijian"})推荐资源
									@Html.TextBoxFor(m => m.RSource, new { @class = "form-control source", maxlength = "255", placeholder = "资源出处" })
									 @Html.ValidationMessageFor(m => m.RSource)
									</div>
								</div>*@

							<div class="form-group">
								@Html.LabelFor(m => m.Description, new { @class = "control-label col-sm-3" })
								<div class="col-sm-9">
									@Html.TextAreaFor(m => m.Description, 4, 30, new { @class = "form-control  textarea", maxlength = "150", placeholder = "资源简介" })
									<div class="img_ta_num">简介最多只允许填写150个字以内</div>

								</div>

							</div>



							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request">*</span> 关键词</label>
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.Keywords, new { @class = "form-control gjz", maxlength = "255", placeholder = "关键词" })
									@Html.ValidationMessageFor(m => m.Keywords)

								</div>
							</div>

							<div class="form-group ">
								<label class="control-label col-sm-3"> <span class="request">*</span> 学段</label>
								<div class="col-sm-9">
									@Html.DropDownListFor(m => m.StagePKID, CroResourceHelper.Stage.GetSelectList(), "适用全体学段", new { @class = "form-control" })
								</div>
							</div>
							<div class="form-group ">
								<label class="control-label col-sm-3"> <span class="request">*</span> 年级</label>
								<div class="col-sm-9">
									@Html.DropDownListFor(m => m.GradePKID, CroResourceHelper.Grade.GetSelectList(), "适用全体年级", new { @class = "form-control" })
								</div>
							</div>
							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request">*</span> 学科</label>
								<div class="col-sm-9">
									@Html.DropDownListFor(m => m.SubjectPKID, CroResourceHelper.Subject.GetSelectList(), "不分学科", new { @class = "form-control" })
								</div>
							</div>

							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request">*</span> 作者</label>
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.Author, new { @class = "form-control", maxlength = "100", placeholder = "作者" })
									@Html.ValidationMessageFor(m => m.Author)
								</div>
							</div>
							<div class="form-group">
								<label class="control-label col-sm-3"> <span class="request">*</span> 所在单位</label>

								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.AuthorCompany, new { @class = "form-control", maxlength = "255", placeholder = "作者所在单位" })
									@Html.ValidationMessageFor(m => m.AuthorCompany)
								</div>
							</div>
							<div class="form-group">
								@Html.LabelFor(m => m.AuthorAddress, new { @class = "control-label col-sm-3" })
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.AuthorAddress, new { @class = "form-control", maxlength = "255", placeholder = "作者单位地址" })
									@Html.ValidationMessageFor(m => m.AuthorAddress)
								</div>
							</div>
							<div class="form-group">
								@Html.LabelFor(m => m.AuthorEmail, new { @class = "control-label col-sm-3" })
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.AuthorEmail, new { @class = "form-control", maxlength = "255", placeholder = "作者电子邮箱" })
									@Html.ValidationMessageFor(m => m.AuthorEmail)
								</div>
							</div>
							<div class="form-group">
								@Html.LabelFor(m => m.AuthorPhone, new { @class = "control-label col-sm-3" })
								<div class="col-sm-9">
									@Html.TextBoxFor(m => m.AuthorPhone, new { @class = "form-control", maxlength = "255", placeholder = "作者联系电话" })
									@Html.ValidationMessageFor(m => m.AuthorPhone)
								</div>
							</div>

							<div class="form-group">
								@Html.LabelFor(m => m.CourseTypePKID, new { @class = "control-label col-sm-3" })
									@if (Model.CrosourceId > 0)
									{
										<div class="col-sm-9">
											<input type="radio" readonly checked="checked" /> 微课程
										</div>
									}
									else
									{
									  <div class="col-sm-9">
										  		微课 @Html.RadioButton("courseType", 0, true) &nbsp;&nbsp;&nbsp;微课程 @Html.RadioButton("courseType", 1, false)
									  </div>
									}
							</div>


							@foreach (var item in Model.Courses ?? new List<MicroCourse>())
							{
								@Html.Partial("Courses", item)
							}

							<div class="form-group text-center">
								<div class="col-sm-10 col-sm-offset-1" style="margin-top:30px;">
									<a href="javascript:void(0)" class="btn btn-block btn-success addCourse" id="AddCourse"><i class="fa fa-plus-square"></i>  新增微课</a>
								</div>
							</div>

							<div class="form-group">
								<div class="col-sm-10 col-sm-offset-1">
									<button type="submit" id="submit" class="btn btn-primary btn-block"><i class="fa fa-check-circle"></i> 确认上传</button>
								</div>
							</div>

						</fieldset>
					}

				</div>

			</div>
			<!-- end widget -->

		</div>
		<!-- /main-content -->
	</div>
	<!-- /main -->
</div>
@section Css {
	@Styles.Render("~/css/tagsinput")
}
@section Plugins {
	@Scripts.Render("~/js/dropzone")
	@Scripts.Render("~/js/tagsinput")
}
@section Scripts {


<script type="text/javascript">
	$(function () {
		$("#GhostFileName").val("").prop("disabled", true);
		$(".textarea").keyup(function () {
			$(".img_ta_num").html("简介还可以填写"+(150 - $(this).val().length)+"个字")		
		})


		$(".source").hide();

		$(".tuijian").on("click", function () {
			$(".source").show();
		});
		$(".yuanchuang").on("click", function () {
			$(".source").hide();
			$(".source").val("");
		});

		$("#submit").on("click", function () {
			//var istj = $("input[type='radio']:checked").val();
			//var source=$(".source").val();
			//if(istj==2){
			//	if($.trim(source)==""){
			//		alert("资源出处必须填写");
			//		return false;
			//	}}

			//var gjz=$(".gjz").val();
			//if($.trim(gjz)==""){
			//	alert("关键字必须填写");
			//	return false;
			//}

			//var zylb=$(".zylb").val();
			//if($.trim(zylb)==""){
			//	alert("资源类别必须选择");
			//	return false;
			//}
			var o = createSubmitObject();
			$.post('@Url.Action("Edit", "Crosource")',{resid:'@Model.CrosourceId',model:o},function(){

			});

			return false;

		});
	});

	function createSubmitObject(){
		var o={};
		o.CrosourceId=$('#CrosourceId').val();
		o.Title=$('#Title').val();
		o.Description=$('#Description').val();
		o.Author=$('#Description').val();
		o.Keywords=$('#Keywords').val();
		o.AuthorCompany=$('#AuthorCompany').val();
		o.AuthorAddress=$('#AuthorAddress').val();
		o.AuthorEmail=$('#AuthorEmail').val();
		o.AuthorPhone=$('#AuthorPhone').val();
		o.StagePKID=$('#StagePKID').val();
		o.GradePKID=$('#GradePKID').val();
		o.SubjectPKID=$('#SubjectPKID').val();
		o.CourseTypePKID=$('#CourseTypePKID').val();
		o.Courses=[];

		$('.courseArea').each(function(i){
			var $this=$(this);
			var course={
				CourseId:$this.find('.courseId').val(),
				CourseTitle:$this.find('.title').val(),
				ResourceId:o.CrosourceId,
				VideoId:$this.find('.courseUploader .fileId').val(),
				CoverId:$this.find('.coverUploader .fileId').val(),
				DesignId:$this.find('.designUploader .fileId').val(),
				SummaryId:$this.find('.summaryUploader .fileId').val(),
				CharpterSortId:i+1,
				Exercises:[]
			};

			$this.find('.exercises').each(function(){
				var $that= $(this);
				var exe={};
				exe.Name=$that.find('.name:first').val();
				exe.Answer= $that.find('.key:first').val();
				course.Exercises.push(exe);
			});

			o.Courses.push(course);
		});

		return o;
		//o.Courses=
		//	[
		//	{
		//		CourseId:0,
		//		ResourceId:0,
		//		VideoId:0,
		//		CoverId:0,
		//		DesignId:0,
		//		SummaryId:0,
		//		CharpterSortId:0,
		//		Exercises:[
		//			{
		//				ExerciseId:0,
		//				CourseId:0,
		//				Title:'这是一道题目',
		//				Answer:'A',
		//				Items:[
		//					{
		//						ItemId:0,
		//						ExerciseId:0,
		//						Item:'这是一个选项',
		//						Code:'A'
		//					}
		//				]
		//			}
		//		]
		//	}
		//	];
	}
</script>


<script type="text/javascript">

	var resTypes = @Html.Raw(Json.Encode(ViewBag.ResTypes));
	var grades = @Html.Raw(Json.Encode(ViewBag.Grades));

		function RelationSelect(src, tat, rule, none) {
			var $src = $(src), $tat = $(tat);

			function doit(init){
				var key = $src.val();
				$tat.empty();
				if (none) {
					$tat.append($("<option>").val(0).text(none));
				}
				$.each(rule, function(i, n){
					if (n.key == key) {
						$tat.append($("<option>").val(n.id).text(n.name));
					}
				});
				if (init) $tat.val(init);
			}

			$src.on("change", function() {
				doit();
			});

			doit($tat.val());
		}

        $(function () {

            $("select option[value='']").val("0");

            var judge = $("#IsLink");
            switch (judge.val()) {
                case "":
                    $("#IsLink").val(true);
                    break;
                case "False":
                    $("#GhostFileName").prop("disabled", true);
                    break;
            }

            // relation select
            RelationSelect($("#DomainPKID"), $("#ResourceTypePKID"), resTypes);
            RelationSelect($("#StagePKID"), $("#GradePKID"), grades, "适用全体年级");

            //Dropzone.autoDiscover = false;
            //// init dropzone upload plugin.
            //$(".dropzone.cover").dropzone({
            //	addRemoveLinks: !0,
            //	maxFiles: 100,
            //	acceptedFiles: "image/*",
            //	dictResponseError: "File Upload Error.",
            //	init: function () {
            //		this.on("success", function (file, data) {
            //			$("#CoverPath").val(data.path);
            //			$("#showCover").html("<img src='" + data.showPath + "' class='cover-img' />");
            //		});
            //		this.on("error", function (file, message) {
            //			alert(message)
            //		});
            //	}
            //});
            //$(".dropzone.file").dropzone({
            //	addRemoveLinks: !0,
            //	maxFilesize: 400,
            //	maxFiles: 100,
            //	thumbnailHeight: 50,
            //	dictResponseError: "File Upload Error.",
            //	dictDefaultMessage: "上传资源文件",
            //	init: function () {
            //		this
            //			.on("processing", function(i){
            //				$(".progress").show();
            //			})
            //			.on("totaluploadprogress", function(i){
            //				$(".progress-bar").css("width", parseInt(i)+"%");
            //			})
            //			.on("removedfile", function() {
            //			})
            //			.on("success", function (file, data) {
            //				$("#ResourcePath").val(data.path);
            //				$("#FileExtName").val(data.ext);
            //				$("#FileSize").val(data.size);
            //				$("#GhostFileName").val(data.name);
            //			})
            //			.on("error", function (file, message) {
            //				alert(message)
            //			});
            //	}
            //})

            //// proxy click event to dropzone.
            //$("#showCover").on("click", function () {
            //	$(".dropzone.cover").trigger('click');
            //});

            //$("#LocalRes").on("click", function(){
            //	$("#GhostFileName").val("").prop("disabled", true);
            //	$("#IsLink").val(false);
            //	$(".progress").hide();
            //	$(".dropzone.file").trigger('click');
            //});
            //$("#WebRes").on("click", function(){
            //	$("#GhostFileName").val("").prop("disabled", false);
            //	$("#IsLink").val(true);
            //	$(".progress").hide();
            //});


            //$("#Keywords").tagsinput({
            //	trimValue: true
            //});


            $("#WebRes").on("click", function () {
                $("#GhostFileName").val("").prop("disabled", false);
                $("#IsLink").val(true);
                $(".progress").hide();
            });


            $("#Keywords").tagsinput({
                trimValue: true
            });

            $('.addCourse').hide();
            $("input[name='courseType']").on("click", function () {
                var val = $(this).val();
                if (val == 1) {
                    $('.addCourse').show();
                }
                else {
                    $('.addCourse').hide();
                    $('.courseArea').not(':first').remove();
                    $('.uploadForms').children().not('.uploaderForm0').remove();
                }
            });


            $('#AddCourse').click(function () {
                $('.courseArea:last').after(createCourse());
                bindResourceUploader($('.courseUploader'), 'course', '.mp4,.flv,.txt');
                bindResourceUploader($('.coverUploader'), 'cover', 'image/*');
                bindResourceUploader($('.designUploader'), 'design', '.doc,.docx');
                bindResourceUploader($('.summaryUploader'), 'summary', '.doc,.docx');
                bindExersies();
            });

            bindResourceUploader($('.courseUploader'), 'course', '.mp4,.flv,.txt');
            bindResourceUploader($('.coverUploader'), 'cover', 'image/*');
            bindResourceUploader($('.designUploader'), 'design', '.doc,.docx');
            bindResourceUploader($('.summaryUploader'), 'summary', '.doc,.docx');
            bindExersies(); // 绑定习题
            bindStem(); // 绑定题干

        });



        function createUploder(name,title){
			return $('<div class="form-group '+name+'"><label class="control-label col-sm-3"> <span class="request">*</span>'+title+'</label>'+
				            '<div class="input-group">'+
											'<input type="text" class="form-control resource-path"  placeholder = "添加'+title+'"/>'+
											'<div class="input-group-btn">'+
												'<button type="button" class="btn btn-default dropdown-toggle btn-upload" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" >选择 </button>'+
												'</div>'+
												'</div>' +
										'<div class="progress" style="display:none">'+
											'<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">' +
												'<span class="sr-only"></span>' +
											'</div>'+
										'</div>'+
										'<div>' +
									'</div><input type="hidden" class="fileId"></div>');
		}

		function creatCover(){
			return $('<div class="form-group coverUploader"><label class="control-label col-sm-3"><span class="request">*</span>视频封面</label>'+
									  '<div class="col-sm-9 coverImageArea">'+
										  '<div title="点击选择封面" class="cover-bg btn-upload">'+
											  '<span>点击选择封面</span>' +
										  '</div>'+
									  '</div><input type="hidden" class="fileId" /></div>')
		}

		function createExcieses(){
			return $('<div class="form-group"><label class="control-label col-sm-3"> <span class="request"></span>练习/测试题</label>'+
									  '<div class="col-sm-9">'+
										  '<div class="input-group">'+
											  '<button class="btn btn-info btn-exes">新增习题</button>'+
										  '</div>'+
									  '</div></div>')
		}

		function createCourse(){
			var course=$('<div class="courseArea" style="border:1px dashed #808080; padding-right:8%; margin-left:3%; padding-top:3%;">')
			course.append(createUploder('courseUploader','微课视频'));
			course.append(creatCover());
			course.append(createUploder('designUploader','教学设计'));
			course.append(createUploder('summaryUploader','教学反思'));
			course.append(createExcieses());

			return course;
		}

		function createExercisesStem(){
			return $(
				  '<div class="exercises rows" style="border:1px dashed #808080;margin:4px; padding:4px;">' +
				    '<div class="form-group stem">'+
						'<div class="col-sm-3">题干：</div>'+
						'<div class="col-sm-4"><input class="form-control name" /></div>'+
						'<div class="col-sm-5"><button class="btn btn-sm btn-success btn-opt">增加选项</button> <button class="btn btn-sm btn-info btn-del">删除</button> </div>'+
					'</div></div>');
		}

		function createExercisesOption(){
			return '<div class="form-group">' +
						'<div class="col-sm-3">A、：</div>' +
						'<div class="col-sm-4"><input class="form-control" /></div>' +
						'<div class="col-sm-5"><button class="btn btn-sm btn-info btn-rem">删除</button> </div>' +
					'</div>';
		}

		function createExercisesAnswer(){
			return $('<div class="form-group answer">' +
						'<div class="col-sm-3">正确答案：</div>'+
						'<div class="col-sm-4"><select class="form-control key"><option value="1">A</option></select></div>'+
						'<div class="col-sm-5"> </div>' +
					'</div>');
		}

		function bindResourceUploader(uploader,type,mimeTypes){
			$(uploader).each(function(i){
				var dropzoneName='dropzone_'+type+i;
				if($('.'+dropzoneName).size()<=0){
					var $uploader=$(this);
					$('.uploadForms').append($('<form action="@Url.Action("UploadResource", "Attachment")" class="'+dropzoneName+' uploaderForm'+i+'"></form>'));
					$('.'+dropzoneName).dropzone({
						addRemoveLinks: !0,
						maxFilesize: 300,
						filesizeBase:100*1024,
						maxFiles: 100,
						acceptedFiles:mimeTypes,
						thumbnailHeight: 200,
						dictResponseError: "Video Upload Error.",
						dictDefaultMessage: "上传视频文件",
						init:function(){
							this
								.on("processing", function(i){
									$uploader.find(".progress").show();
								})
								.on("totaluploadprogress", function(i){
									$uploader.find(".progress-bar").css("width", parseInt(i)+"%");
								})
								.on("removedfile", function() {
								})
								.on("success", function (file, data) {
									$uploader.find('.resource-path').val(data.name);
									$uploader.find('.fileId').val(data.fileId);
									//如果是封面则显示
									if(type =='cover'){
										$uploader.find('.coverImageArea').html('').append('<img src="'+data.path+'" style="width:100%; height:100%" class="btn-upload">');
									}
								})
								.on("error", function (file, message) {
									alert(message)
								});
						}
					});

					$uploader.find('.btn-upload').unbind('click').on('click', function () {
						$("."+dropzoneName).trigger('click');
					});
				}

			});
		}

		function bindExersies(){
			$('.btn-exes').off('click').on('click',function(){
				var $this=$(this);
				var stem=createExercisesStem();
				var answer=createExercisesAnswer();

				$this.parent().after(stem);
				$(stem).append(answer)
				   .find('.btn-opt').off('click').click(function(){
				   	var option=createExercisesOption();
				   	$(answer).find('select').append('<option>bbbb</option>');
				   	$(answer).before(option);
				   	$(stem).find('.btn-rem').off('click').on('click',function(){
				   		$(this).parent().parent().remove();
				   		return false;
				   	});

				   	return false;
				   }).find('.btn-del').on('click',function(){
				   	$(this).parents('.exercises').remove();

				   	return false;
				   });

				return false;
			});
		}

		function bindStem(){
			$('.exercises').each(function(){
				var $this=$(this);
				var $answer=$this.find('.answer');
				$this.find('.btn-opt').off('click').on('click',function(){
					var option=createExercisesOption();
					$answer.before(option);

					$this.find('.btn-rem').off('click').on('click',function(){
						$(this).parent().parent().remove();
						return false;
					});

					return false;
				});

				$this.find('.btn-del').on('click',function(){
					$this.remove();
					return false;
				})

			});
		}


</script>
}