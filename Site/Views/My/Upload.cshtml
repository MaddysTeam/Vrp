@model ResResource
@{
	ViewBag.Title =  "上传新资源";
}
<ul class="nav nav-tabs my_nav">
	<li><a href="@Url.Action("Index")">个人信息</a></li>
	<li class="active"><a href="@Url.Action("Resource")">我的上传</a></li>
	<li><a href="@Url.Action("Favorite")">我的收藏</a></li>
	<li><a href="@Url.Action("Comment")">我的评论</a></li>
</ul>
<div class="full_white">

<div class="block_panel blue_edge">
	<div class="panel_title nav">
		<img src="~/assets/img/ico_my.png"> @ViewBag.Title
	</div>
	<div class="body">

				<div class="widget-content">
					<form action="@Url.Action("UploadCover", "Attachment")" class="dropzone cover"></form>
					<form action="@Url.Action("UploadResource", "Attachment")" class="dropzone file"></form>
					<div class="row">
						@using (Html.BeginForm("Upload", "My", Model == null ? null : new { id = Model.ResourceId }, FormMethod.Post, new { id = "form", role = "form", @class = "form-horizontal" }))
						{
							@Html.HiddenFor(m => m.ResourceId)
							@Html.HiddenFor(m => m.CoverPath)
							@Html.HiddenFor(m => m.ResourcePath)
							@Html.HiddenFor(m => m.FileExtName)
							@Html.HiddenFor(m => m.FileSize)
							@Html.HiddenFor(m => m.IsLink)
							<fieldset class="col-sm-7">
								<div class="form-group">
									@Html.LabelFor(m => m.Title, new { @class = "control-label col-sm-2" })
									<div class="col-sm-10">
										@Html.TextBoxFor(m => m.Title, new { @class = "form-control", maxlength = "255", placeholder = "资源标题" })
										@Html.ValidationMessageFor(m => m.Title)
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(m => m.GhostFileName, new { @class = "control-label col-sm-2" })
									<div class="col-sm-10">
										<div class="input-group">
											@Html.TextBoxFor(m => m.GhostFileName, new { @class = "form-control", maxlength = "255", placeholder = "资源路径" })
											<div class="input-group-btn">
												<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">选择 <span class="caret"></span></button>
												<ul class="dropdown-menu dropdown-menu-right">
													<li><a id="LocalRes" href="javascript:;">本地资源</a></li>
													<li><a id="WebRes" href="javascript:;">网络资源</a></li>
												</ul>
											</div>
										</div>
										<div class="progress" style="display:none">
											<div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;">
												<span class="sr-only"></span>
											</div>
										</div>
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(m => m.Description, new { @class = "control-label col-sm-2" })
									<div class="col-sm-10">
										@Html.TextAreaFor(m => m.Description, 4, 30, new { @class = "form-control", maxlength = "30000", placeholder = "描述" })
										@Html.ValidationMessageFor(m => m.Description)
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(m => m.Keywords, new { @class = "control-label col-sm-2" })
									<div class="col-sm-10">
										@Html.TextBoxFor(m => m.Keywords, new { @class = "form-control", maxlength = "255" })
										@Html.ValidationMessageFor(m => m.Keywords)
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.DomainPKID, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.DropDownListFor(m => m.DomainPKID, ResResourceHelper.Domain.GetSelectList(), new { @class = "form-control" })
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.ResourceTypePKID, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.DropDownListFor(m => m.ResourceTypePKID, ResResourceHelper.ResourceType.GetSelectList(), new { @class = "form-control" })
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.StagePKID, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.DropDownListFor(m => m.StagePKID, ResResourceHelper.Stage.GetSelectList(), "适用全体学段", new { @class = "form-control" })
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.GradePKID, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.DropDownListFor(m => m.GradePKID, ResResourceHelper.Grade.GetSelectList(), "适用全体年级", new { @class = "form-control" })
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.SubjectPKID, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.DropDownListFor(m => m.SubjectPKID, ResResourceHelper.Subject.GetSelectList(), "不分学科", new { @class = "form-control" })
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.SchoolTypePKID, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.DropDownListFor(m => m.SchoolTypePKID, ResResourceHelper.SchoolType.GetSelectList(), "不分学校类型", new { @class = "form-control" })
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.DeformityPKID, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.DropDownListFor(m => m.DeformityPKID, ResResourceHelper.Deformity.GetSelectList(), "不分残疾类别", new { @class = "form-control", maxlength = "80" })
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.LearnFromPKID, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.DropDownListFor(m => m.LearnFromPKID, ResResourceHelper.LearnFrom.GetSelectList(), "不分安置形式", new { @class = "form-control", maxlength = "80" })
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(m => m.Author, new { @class = "control-label col-sm-2" })
									<div class="col-sm-5">
										@Html.TextBoxFor(m => m.Author, new { @class = "form-control", maxlength = "100", placeholder = "作者" })
										@Html.ValidationMessageFor(m => m.Author)
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(m => m.AuthorCompany, new { @class = "control-label col-sm-2" })
									<div class="col-sm-10">
										@Html.TextBoxFor(m => m.AuthorCompany, new { @class = "form-control", maxlength = "255", placeholder = "作者所在单位" })
										@Html.ValidationMessageFor(m => m.AuthorCompany)
									</div>
								</div>
								<div class="form-group">
									@Html.LabelFor(m => m.AuthorAddress, new { @class = "control-label col-sm-2" })
									<div class="col-sm-10">
										@Html.TextBoxFor(m => m.AuthorAddress, new { @class = "form-control", maxlength = "255", placeholder = "作者单位地址" })
										@Html.ValidationMessageFor(m => m.AuthorAddress)
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.AuthorEmail, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.TextBoxFor(m => m.AuthorEmail, new { @class = "form-control", maxlength = "255", placeholder = "作者电子邮箱" })
										@Html.ValidationMessageFor(m => m.AuthorEmail)
									</div>
								</div>
								<div class="form-group col-sm-6">
									@Html.LabelFor(m => m.AuthorPhone, new { @class = "control-label col-sm-4" })
									<div class="col-sm-8">
										@Html.TextBoxFor(m => m.AuthorPhone, new { @class = "form-control", maxlength = "255", placeholder = "作者联系电话" })
										@Html.ValidationMessageFor(m => m.AuthorPhone)
									</div>
								</div>
								<div class="form-group">
									<div class="col-sm-10 col-sm-offset-2">
										<button type="submit" id="submit" class="btn btn-primary btn-block"><i class="fa fa-check-circle"></i> 保存</button>
									</div>
								</div>
							</fieldset>
						}
						<fieldset class="col-sm-5">
							<div class="form-group">
								<label class="control-label">封面</label>
								<div class="col-sm-12">
									<div id="showCover" title="点击选择封面" class="cover-bg">
										@if (Model != null && Model.CoverPath != "")
										{
											<img src="@Url.Content(Model.CoverPath)" class="cover-img" />
										}
										else
										{
											<span>点击选择封面</span>
										}
									</div>
								</div>
							</div>
						</fieldset>
					</div>
				</div>

	</div>
</div>

</div>
@section Css {
	@Styles.Render("~/css/tagsinput")
	@Styles.Render("~/css/app2")
}
@section Plugins {
	@Scripts.Render("~/js/dropzone")
	@Scripts.Render("~/js/tagsinput")
}
@section Scripts {
	<script type="text/javascript">

		var resTypes = @Html.Raw(Json.Encode(ViewBag.ResTypes));
		var grades = @Html.Raw(Json.Encode(ViewBag.Grades));

		function RelationSelect(src, tat, rule, none) {
			var $src = $(src), $tat = $(tat);

			function doit(init){
				var key = $src.val();
				$tat.empty();
				if (none) {
					$tat.append($("<option>").val(0).text(none));
				}
				$.each(rule, function(i, n){
					if (n.key == key) {
						$tat.append($("<option>").val(n.id).text(n.name));
					}
				});
				if (init) $tat.val(init);
			}

			$src.on("change", function() {
				doit();
			});

			doit($tat.val());
		}

		$(function () {

			$("select option[value='']").val("0");

			var judge = $("#IsLink");
			switch(judge.val()) {
				case "" :
					$("#IsLink").val(true);
					break;
				case "False" :
					$("#GhostFileName").prop("disabled", true);
					break;
			}

			// relation select
			RelationSelect($("#DomainPKID"), $("#ResourceTypePKID"), resTypes);
			RelationSelect($("#StagePKID"), $("#GradePKID"), grades, "适用全体年级");

			Dropzone.autoDiscover = false;
			// init dropzone upload plugin.
			$(".dropzone.cover").dropzone({
				addRemoveLinks: !0,
				maxFiles: 100,
				acceptedFiles: "image/*",
				dictResponseError: "File Upload Error.",
				init: function () {
					this.on("success", function (file, data) {
						$("#CoverPath").val(data.path);
						$("#showCover").html("<img src='" + data.showPath + "' class='cover-img' />");
					});
					this.on("error", function (file, message) {
						alert(message)
					});
				}
			});
			$(".dropzone.file").dropzone({
				addRemoveLinks: !0,
				maxFilesize: 100,
				maxFiles: 100,
				thumbnailHeight: 50,
				dictResponseError: "File Upload Error.",
				dictDefaultMessage: "上传资源文件",
				init: function () {
					this
						.on("processing", function(i){
							$(".progress").show();
						})
						.on("totaluploadprogress", function(i){
							$(".progress-bar").css("width", parseInt(i)+"%");
						})
						.on("removedfile", function() {
						})
						.on("success", function (file, data) {
							$("#ResourcePath").val(data.path);
							$("#FileExtName").val(data.ext);
							$("#FileSize").val(data.size);
							$("#GhostFileName").val(data.name);
						})
						.on("error", function (file, message) {
							alert(message)
						});
				}
			})

			// proxy click event to dropzone.
			$("#showCover").on("click", function () {
				$(".dropzone.cover").trigger('click');
			});

			$("#LocalRes").on("click", function(){
				$("#GhostFileName").val("").prop("disabled", true);
				$("#IsLink").val(false);
				$(".progress").hide();
				$(".dropzone.file").trigger('click');
			});
			$("#WebRes").on("click", function(){
				$("#GhostFileName").val("").prop("disabled", false);
				$("#IsLink").val(true);
				$(".progress").hide();
			});


			$("#Keywords").tagsinput({
				trimValue: true
			});

		})


	</script>
}